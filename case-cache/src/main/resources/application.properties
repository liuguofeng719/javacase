#spring.datasource.jdb=jdbc:mysql://127.0.0.1:3306/eshop?useUnicode=true&characterEncoding=utf8&useSSL=false&zeroDateTimeBehavior=convertToNull
#spring.datasource.name=root
#spring.datasource.password=123456
#spring.datasource.driver-class-name=com.mysql.jdbc.Driver
#
#spring.datasource.type=com.zaxxer.hikari.HikariDataSource
#spring.datasource.hikari.minimum-idle=5
#spring.datasource.hikari.maximum-pool-size=15
#spring.datasource.hikari.auto-commit=true
#spring.datasource.hikari.idle-timeout=30000
#spring.datasource.hikari.pool-name=DatebookHikariCP
#spring.datasource.hikari.max-lifetime=1800000
#spring.datasource.hikari.connection-timeout=30000
#spring.datasource.hikari.connection-test-query=SELECT 1


# Druid\u8FDE\u63A5\u6C60\u914D\u7F6E\uFF0C\u5B98\u65B9\u914D\u7F6E\u53C2\u8003\uFF1Ahttps://github.com/alibaba/druid/tree/master/druid-spring-boot-starter
spring.datasource.druid.url=jdbc:mysql://127.0.0.1:3306/eshop?useUnicode=true&characterEncoding=utf8&useSSL=false
spring.datasource.druid.username=root
spring.datasource.druid.password=123456
spring.datasource.druid.initial-size=5
spring.datasource.druid.max-active=20
spring.datasource.druid.min-idle=10
spring.datasource.druid.max-wait=10
spring.datasource.druid.filters=stat,wall
spring.datasource.druid.filter.stat.log-slow-sql=true
spring.datasource.druid.filter.stat.slow-sql-millis=2000

mybatis.mapper-locations=classpath*:mybatis/*Mapper.xml
mybatis.type-aliases-package=com.example.cache.domain

##kafka
#kafka.producer.servers=10.211.55.4:9092,10.211.55.5:9092,10.211.55.6:9092
#kafka.producer.retries=0
#kafka.producer.batch.size=4096
##lingger.ms\u662Fsender\u7EBF\u7A0B\u5728\u68C0\u67E5batch\u662F\u5426ready\u65F6\u5019\uFF0C\u5224\u65AD\u6709\u6CA1\u6709\u8FC7\u671F\u7684\u53C2\u6570\uFF0C\u9ED8\u8BA4\u5927\u5C0F\u662F0ms\u3002
#kafka.producer.linger=1
#kafka.producer.buffer.memory=40960
#
#kafka.consumer.servers=10.211.55.4:9092,10.211.55.5:9092,10.211.55.6:9092
#kafka.consumer.enable.auto.commit=true
#kafka.consumer.session.timeout=6000
#kafka.consumer.auto.commit.interval=100
#kafka.consumer.auto.offset.reset=latest
#kafka.consumer.topic=test
#kafka.consumer.group.id=d=test
#kafka.consumer.concurrency=10

#============== kafka ===================
# \u6307\u5B9Akafka \u4EE3\u7406\u5730\u5740\uFF0C\u53EF\u4EE5\u591A\u4E2A
spring.kafka.bootstrap-servers=10.211.55.4:9092,10.211.55.5:9092,10.211.55.6:9092
#=============== provider  =======================
spring.kafka.producer.retries=0
# \u6BCF\u6B21\u6279\u91CF\u53D1\u9001\u6D88\u606F\u7684\u6570\u91CF
spring.kafka.producer.batch-size=16384
spring.kafka.producer.buffer-memory=33554432
# \u6307\u5B9A\u6D88\u606Fkey\u548C\u6D88\u606F\u4F53\u7684\u7F16\u89E3\u7801\u65B9\u5F0F
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
#=============== consumer  =======================
#https://blog.csdn.net/lishuangzhe7047/article/details/74530417
#spring.kafka.consumer.auto-offset-reset
#earliest
#\u5F53\u5404\u5206\u533A\u4E0B\u6709\u5DF2\u63D0\u4EA4\u7684offset\u65F6\uFF0C\u4ECE\u63D0\u4EA4\u7684offset\u5F00\u59CB\u6D88\u8D39\uFF1B\u65E0\u63D0\u4EA4\u7684offset\u65F6\uFF0C\u4ECE\u5934\u5F00\u59CB\u6D88\u8D39
#latest
#\u5F53\u5404\u5206\u533A\u4E0B\u6709\u5DF2\u63D0\u4EA4\u7684offset\u65F6\uFF0C\u4ECE\u63D0\u4EA4\u7684offset\u5F00\u59CB\u6D88\u8D39\uFF1B\u65E0\u63D0\u4EA4\u7684offset\u65F6\uFF0C\u6D88\u8D39\u65B0\u4EA7\u751F\u7684\u8BE5\u5206\u533A\u4E0B\u7684\u6570\u636E
#none
#topic\u5404\u5206\u533A\u90FD\u5B58\u5728\u5DF2\u63D0\u4EA4\u7684offset\u65F6\uFF0C\u4ECEoffset\u540E\u5F00\u59CB\u6D88\u8D39\uFF1B\u53EA\u8981\u6709\u4E00\u4E2A\u5206\u533A\u4E0D\u5B58\u5728\u5DF2\u63D0\u4EA4\u7684offset\uFF0C\u5219\u629B\u51FA\u5F02\u5E38
# \u6307\u5B9A\u9ED8\u8BA4\u6D88\u8D39\u8005group id
spring.kafka.consumer.group-id=test-consumer-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.enable-auto-commit=true
spring.kafka.consumer.auto-commit-interval=100
# \u6307\u5B9A\u6D88\u606Fkey\u548C\u6D88\u606F\u4F53\u7684\u7F16\u89E3\u7801\u65B9\u5F0F
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer


#redis \u96C6\u7FA4
spring.redis.cluster.nodes[0]=10.211.55.4:7001
spring.redis.cluster.nodes[1]=10.211.55.4:7002
spring.redis.cluster.nodes[2]=10.211.55.5:7003
spring.redis.cluster.nodes[3]=10.211.55.5:7004
spring.redis.cluster.nodes[4]=10.211.55.6:7005
spring.redis.cluster.nodes[5]=10.211.55.6:7006

#\u8FDE\u63A5\u6C60
spring.redis.lettuce.pool.max-active=3
spring.redis.lettuce.pool.max-wait=5
spring.redis.lettuce.pool.max-idle=5
spring.redis.lettuce.pool.min-idle=5

#zookeeper
zkserver.connectionString=10.211.55.4:2181,10.211.55.5:2181,10.211.55.6:2181
zkserver.sessionTimeoutMs=3000
zkserver.connectionTimeoutMs=3000
zkserver.baseSleepTimeMs=1000
zkserver.maxRetries=3
zkserver.maxSleepMs=6000
zkserver.namespace=cache



